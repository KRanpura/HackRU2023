[{"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\index.js":"1","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\App.js":"2","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Signup.js":"4","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Login.js":"5","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\api.js":"6","C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Post.js":"7"},{"size":552,"mtime":1696725470529,"results":"8","hashOfConfig":"9"},{"size":554,"mtime":1696734424380,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1696725470529,"results":"11","hashOfConfig":"9"},{"size":6116,"mtime":1696744902181,"results":"12","hashOfConfig":"9"},{"size":1690,"mtime":1696725470527,"results":"13","hashOfConfig":"9"},{"size":964,"mtime":1696745079145,"results":"14","hashOfConfig":"9"},{"size":3613,"mtime":1696741730194,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b96kt6",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\index.js",[],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\App.js",[],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Signup.js",["39"],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Login.js",[],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\api.js",[],[],"C:\\Users\\ahmed\\Desktop\\HackRU2023\\HackRU2023\\eventbuddy\\client\\src\\components\\Post.js",["40","41"],[],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { updatePost } from '../api';\r\nconst { v4: uuidv4 } = require('uuid'); //make sure to import this\r\nfunction Post() {\r\n    const [activity, setActivity] = useState('');\r\n    const [interest, setInterest] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [submitDate, setSubmitDate] = useState(null);\r\n  \r\n    const handlePost = async (e) => {\r\n      e.preventDefault();\r\n  \r\n      // Get the current date and time as a string\r\n      const currentDateTime = new Date().toLocaleString();\r\n  \r\n      // Create the post object with the form data and submission date\r\n      const post = {\r\n        id: uuidv4(),\r\n        activity,\r\n        interest,\r\n        activity,\r\n        desc,\r\n        location,\r\n        date_time: currentDateTime,\r\n      };\r\n      console.log(post);\r\n      // Send the post data to your API for further processing\r\n      const response = await updatePost(post);\r\n      console.log(response);\r\n      // Handle the API response or any other actions as needed\r\n  \r\n      // Clear the form fields after submission\r\n      setActivity('');\r\n      setInterest('');\r\n      setDesc('');\r\n      setLocation('');\r\n      setSubmitDate(currentDateTime);\r\n    };\r\n  \r\n    const handleInterestChange = (event) => {\r\n      // Update the 'interest' state with the selected option's value\r\n      setInterest(event.target.value);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"post\">\r\n        <h1>Make a Post</h1>\r\n        <form onSubmit={handlePost}>\r\n          <label>\r\n          What event do you want to attend?\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"activity\"\r\n              name=\"activity\"\r\n              value={activity}\r\n              onChange={(event) => setActivity(event.target.value)}\r\n              placeholder=\"Activity\"\r\n            />\r\n          </label>\r\n          <label>\r\n          Location:\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={(event) => setLocation(event.target.value)}\r\n              placeholder=\"Location\"\r\n            />\r\n          </label>\r\n          <label>\r\n          Choose an interest category:\r\n            <select\r\n              name=\"interest\"\r\n              id=\"interest\"\r\n              value={interest}\r\n              onChange={handleInterestChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Choose an interest\r\n              </option>\r\n              <option value=\"social\">Social Event</option>\r\n              <option value=\"academic\">Academic Event</option>\r\n              <option value=\"service\">Service Event</option>\r\n              <option value=\"career\">Career Event</option>\r\n            </select>\r\n\r\n          </label>\r\n          <label>\r\n          Describe the Event:\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              id=\"desc\"\r\n              name=\"desc\"\r\n              value={desc}\r\n              onChange={(event) => setDesc(event.target.value)}\r\n              placeholder=\"Description\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Post\r\n          </button>\r\n        </form>\r\n        {submitDate && (\r\n          <div>\r\n            Post submitted on: {submitDate}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Post;",[],{"ruleId":"42","severity":1,"message":"43","line":15,"column":9,"nodeType":"44","messageId":"45","endLine":15,"endColumn":15},{"ruleId":"42","severity":1,"message":"46","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":23,"column":9,"nodeType":"49","messageId":"50","endLine":23,"endColumn":17},"no-unused-vars","'resets' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'activity'.","ObjectExpression","unexpected"]